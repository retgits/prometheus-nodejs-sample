{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "TIBCO Cloud Integration PetStore Sample",
        "description": "To get you started with the API Modeling and Mock capabilities of TIBCO Cloud Intergration we've created a sample API Specification for you. This sample shows an API Specification for a PetStore API that can GET (retrieve), POST (create), PUT (update) and DELETE pets in the store. To make things easier we've only created a small specification with a single resource '/pet/{petId}'",
        "contact": {
            "name": "TIBCO Cloud Integration Team",
            "url": "https://integration.cloud.tibco.com/docs/index.html",
            "email": "tci@tibco.com"
        }
    },
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/pet/{petId}": {
            "post": {
                "summary": "Use the POST method of this API specification to create a new pet",
                "description": "The POST method in an API Specification is used to create a new resource. In this case it would create a new pet with the petId you specify when calling the API and the information you add to the body (e.g. the name or the status). When you create a [Mock application](https://integration.cloud.tibco.com/docs/mockapp/creatingMockApp/index.html#APIModeler) from this specification it will also show you a sample request and a sample response.",
                "operationId": "postpet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Pet Information",
                        "in": "body",
                        "description": "The information of the pet you want to create in the store",
                        "schema": {
                            "type": "object",
                            "required": [
                                "photoUrls",
                                "name",
                                "id",
                                "category",
                                "status",
                                "tags"
                            ],
                            "properties": {
                                "photoUrls": {
                                    "type": "object",
                                    "required": [
                                        "photoUrl"
                                    ],
                                    "properties": {
                                        "photoUrl": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "object",
                                    "required": [
                                        "name",
                                        "id"
                                    ],
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string"
                                },
                                "tags": {
                                    "type": "object",
                                    "properties": {
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "name",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "required": true
                    },
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet you want to create",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a Pet to be returned",
                        "schema": {
                            "type": "object",
                            "required": [
                                "photoUrls",
                                "name",
                                "id",
                                "category",
                                "status",
                                "tags"
                            ],
                            "properties": {
                                "photoUrls": {
                                    "type": "object",
                                    "required": [
                                        "photoUrl"
                                    ],
                                    "properties": {
                                        "photoUrl": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "object",
                                    "required": [
                                        "name",
                                        "id"
                                    ],
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string"
                                },
                                "tags": {
                                    "type": "object",
                                    "properties": {
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "name",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "category": {
                                    "id": "1",
                                    "name": "Domesticated pets"
                                },
                                "id": "6",
                                "name": "Dog6",
                                "photoUrls": {
                                    "photoUrl": "http://s5.favim.com/orig/69/adorable-cute-dog-photography-Favim.com-659715.jpg"
                                },
                                "status": "Available",
                                "tags": {
                                    "tag": [
                                        {
                                            "id": "6",
                                            "name": "Dogs"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Use the GET method of this API specification to retrieve (get) a pet from the store",
                "description": "The GET method in an API Specification is used to retrieve a resource from the API. In this case it would retrieve a pet with the petId you specify when calling the API. When the pet is found it will return the information to you. When you create a [Mock application](https://integration.cloud.tibco.com/docs/mockapp/creatingMockApp/index.html#APIModeler) from this specification it will also show you a sample response.",
                "operationId": "getpet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet you want to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a Pet to be returned",
                        "schema": {
                            "type": "object",
                            "required": [
                                "photoUrls",
                                "name",
                                "id",
                                "category",
                                "status",
                                "tags"
                            ],
                            "properties": {
                                "photoUrls": {
                                    "type": "object",
                                    "required": [
                                        "photoUrl"
                                    ],
                                    "properties": {
                                        "photoUrl": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "object",
                                    "required": [
                                        "name",
                                        "id"
                                    ],
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string"
                                },
                                "tags": {
                                    "type": "object",
                                    "properties": {
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "name",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "category": {
                                    "id": "1",
                                    "name": "Domesticated pets"
                                },
                                "id": "6",
                                "name": "Dog6",
                                "photoUrls": {
                                    "photoUrl": "http://s5.favim.com/orig/69/adorable-cute-dog-photography-Favim.com-659715.jpg"
                                },
                                "status": "Available",
                                "tags": {
                                    "tag": [
                                        {
                                            "id": "6",
                                            "name": "Dogs"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Use the PUT method of this API specification to update a pet",
                "description": "The PUT method in an API Specification is used to create a new resource or update an existing resource. Based on the ID you specify when calling the API it would create a new pet in the store if the ID isn't in use or will update the pet that has the ID if the ID already exists. It would create or update the pet with the information you add to the body (e.g. the name or the status). When you create a [Mock application](https://integration.cloud.tibco.com/docs/mockapp/creatingMockApp/index.html#APIModeler) from this specification it will also show you a sample request and a sample response.",
                "operationId": "putpet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Pet Information",
                        "in": "body",
                        "description": "The information of the pet you want to create in the store",
                        "schema": {
                            "type": "object",
                            "required": [
                                "photoUrls",
                                "name",
                                "id",
                                "category",
                                "status",
                                "tags"
                            ],
                            "properties": {
                                "photoUrls": {
                                    "type": "object",
                                    "required": [
                                        "photoUrl"
                                    ],
                                    "properties": {
                                        "photoUrl": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "object",
                                    "required": [
                                        "name",
                                        "id"
                                    ],
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string"
                                },
                                "tags": {
                                    "type": "object",
                                    "properties": {
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "name",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "required": true
                    },
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a Pet to be returned",
                        "schema": {
                            "type": "object",
                            "required": [
                                "photoUrls",
                                "name",
                                "id",
                                "category",
                                "status",
                                "tags"
                            ],
                            "properties": {
                                "photoUrls": {
                                    "type": "object",
                                    "required": [
                                        "photoUrl"
                                    ],
                                    "properties": {
                                        "photoUrl": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "object",
                                    "required": [
                                        "name",
                                        "id"
                                    ],
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string"
                                },
                                "tags": {
                                    "type": "object",
                                    "properties": {
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "name",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "category": {
                                    "id": "1",
                                    "name": "Domesticated pets"
                                },
                                "id": "6",
                                "name": "Dog6",
                                "photoUrls": {
                                    "photoUrl": "http://s5.favim.com/orig/69/adorable-cute-dog-photography-Favim.com-659715.jpg"
                                },
                                "status": "Available",
                                "tags": {
                                    "tag": [
                                        {
                                            "id": "6",
                                            "name": "Dogs"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Use the DELETE method of this API specification to remove (DELETE) a pet from the store",
                "description": "The DELETE method in an API Specification is used to remove a resource from the API. In this case it would remove the pet with the petId you specify when calling the API. When you create a [Mock application](https://integration.cloud.tibco.com/docs/mockapp/creatingMockApp/index.html#APIModeler) from this specification it will also show you a sample response.",
                "operationId": "deletepet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet to be removed",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a string to be returned",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "photoUrls": {
            "type": "object",
            "required": [
                "photoUrl"
            ],
            "properties": {
                "photoUrl": {
                    "type": "string"
                }
            }
        },
        "tag": {
            "type": "object",
            "required": [
                "name",
                "id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "category": {
            "type": "object",
            "required": [
                "name",
                "id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "Pet": {
            "type": "object",
            "required": [
                "photoUrls",
                "name",
                "id",
                "category",
                "status",
                "tags"
            ],
            "properties": {
                "photoUrls": {
                    "type": "object",
                    "required": [
                        "photoUrl"
                    ],
                    "properties": {
                        "photoUrl": {
                            "type": "string"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "category": {
                    "type": "object",
                    "required": [
                        "name",
                        "id"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "properties": {
                        "tag": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "tags": {
            "type": "object",
            "properties": {
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "name",
                            "id"
                        ],
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    }
}